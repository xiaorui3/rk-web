
	1.循环相关的知识
		for  while   do...while
		break   continue	标记ok:
	2.数组
		特点：
			引用数据类型，堆内存产生，地址是连续
			初始化数组必须指定长度，一旦确定不能再次改变的
		写法：
			创建数组  		数据类型[] 名字;		变量空间(引用)
			初始化		静态-有长度 有元素	动态-只有长度(默认)
							堆空间中的元素都有默认值(数组，对象-属性)
							栈空间中的元素是没有默认值(变量)
			访问数组元素	索引-index-下标
							从0开始的，长度减一为止
			遍历/for/forEach
	3.多维数组(二维)
			int[][]		String[]	[]
			int[][] array = new int[][] {{1,2},{3,4,5,6}};
			int[][] array = new int[3][2];	内存


笔试题：：：：

	public static void main(String[] args){
		int value = 100;
		int[][] array = new int[3][2];
		array[0][0] = 10;
		array[0][1] = 20;
		array[1] = array[0];
		array[0] = new int[4];
		array[0][0] = 30;
		array[0][1] = value;
		value = array[1][1];
		System.out.println(value);		//
		System.out.println(array[0][0]);	//
		System.out.println(array[1][0]);	//
		System.out.println(array[2][0]);	//
	}





	引出：
		异常Exception		错误Error
		错误更严重一点：通常是计算机处理不了啦
			StackOverflowError		栈内存溢出错误
			OutOfMemoryError		堆内存溢出错误
		异常不是那么严重：异常不是计算机处理不了，是人为规定的
			人为规定的一种不正常现象	未来我们自己也可以描述异常
			异常大体分为两类，编译时异常，运行时异常
		现在出现的异常，现有一个印象
			1.出现的异常，英文名尽量记住
				NegativeArraySizeException
				ArrayIndexOutOfBoundsException
			2.清晰的知道，异常产生的原因
				动态初始化的时候，长度有问题(负数)
				使用数组的时候，索引位置超出边界啦
			3.要知道如何解决
				现阶段的异常，大概率都是运行时异常
				大概率都是因为我们的编码造成的(当错误看)

=============================================

	小任务：用户登录的验证
		输入：Scanner
		数据库：数组		需求分析(数组怎么存，业务)

		String	""		int
		zhangsan			333
		lisi				444
		wangwu			555
		zhaoliu			666
		zhengzhongtuo	888

		String[]	一个小数组存储一个人的信息，0-账号，1-密码
			{ {zhangsan,333} , {lisi,444} , {wangwu,555} }
		-----------------------------------
		String[]	全都是账号
			{zhangsan , lisi , wangwu}
		int[]		全都是密码
			{333 , 444 , 555}


	
	补充：
		1.关于String类型的比较问题(详见代码)
			==		equals()	的区别

       	String a = "123";
        String b = "123";               //“123” 对象---常量的写法  字符串常量缓冲区
        System.out.println(a == b);

        //String引用数据类型
        String c = new String("456");       //new   堆空间
        String d = new String("456");       //new   两个堆空间的对象
        System.out.println(c == d);
        System.out.println(c.equals(d));


		2.关于String和int类型之间的转化问题
			int--->String		5+5+"5"+5+5		"10555"
			String--->int		借助包装类	Integer
				int value = Integer.parseInt("555");
				int value = new Integer("555");
		注意，转化的时候，可能会出现一个运行时异常
			NumberFormatException

	再次补充：
		用户名或密码错误？？？？	防止破解


==================================================
	可以利用基本语句，实现很多业务啦
		if	for	数组		Scanner。。。。
	所有的代码都放在了一个main方法里？？？？？？
		1.很多，很长，不好管理
		2.很多代码是可以复用		18行

	能不能将我们写完的一段代码，统一的管理起来
		就属于封装的思想

	封装的维度：
		1.一段写好的代码(逻辑)，找个位置包起来---方法
		2.面向对象的角度，对象里面的成员是对象自己的，别人不能操作---私有
		3.封装的一堆代码，具备很多共用的功能，给别人使用---框架(工具类)


=====================================
	设计方法！！！		非常非常非常重要	very
	1.方法不能单独存在，一定要写在类中
		
	2.理解方法很重要，你可以将方法看作是做一件事情

	3.在此基础上，从思想上有一个意识(设计方法的人和调用方法的人，不一定一样)


	方法的语法
	1.不能独立存在，需要设计在类结构中

	2.语法	方法的结构有如下几个：：
		
权限修饰符  [特征修饰符]  返回值类型  方法名字  ([参数列表]) [抛出异常] [{方法体}] ;
	[]括起来的部分，表示可有可无，其余的结构是必须有的

	权限修饰符  返回值类型  方法名字  () {
		做事情
	}

	权限修饰符：public  protected  默认不写  private
	方法名字：理论上随意，遵循规则和规约，小驼峰
	综上：设计方法，最该思考的是方法参数和返回值

	参数列表，有/没有
	返回值，有/没有

	无参数无返回值
	有参数无返回值
	无参数有返回值
	有参数有返回值

	理解：
		方法理解成做一件事情
		参数理解为做这件事情之前，提供给方法的条件，个数0-n，类型随意
		返回值理解为做完这件事后，给别人留下的结果，个数0-1，类型随意



作业：

	之前做过的所有练习，设计成方法		参数，返回值？为什么

	设计一个方法，用来画直角三角形
	
	设计一个方法，用来画9*9乘法表

	设计一个方法，用来找寻数组内是否存在元素

	设计一个方法，用来合并两个有序数组

	设计一个方法，用来存储2-100之间的素数

	设计一个方法，用来做用户密码的登录验证。。。。。。













